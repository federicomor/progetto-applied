factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[1]]], check.keys = T)$raw_alpha)
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[2]]], check.keys = T)$raw_alpha)
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
}
psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[2]]], check.keys = T)
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[1]]], check.keys = T)$total[1])
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[2]]], check.keys = T)$total[1])
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
}
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
cat(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[1]]], check.keys = T)$total[1])
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[2]]], check.keys = T)$total[1])
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
}
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
alpha <- psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[1]]], check.keys = T)$total[1])
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
alpha <- psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[1]]], check.keys = T)$total[1]
print(alpha$total[1])
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[2]]], check.keys = T)$total[1])
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
}
alpha$raw_alpha
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
alpha <- psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[1]]], check.keys = T)
print(alpha$toal[1])
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[2]]], check.keys = T)$total[1])
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
}
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
alpha <- psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[1]]], check.keys = T)
print(alpha$total[1])
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[2]]], check.keys = T)$total[1])
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
}
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
alpha <- psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[1]]], check.keys = T)$total[1]
print(alpha$raw_alpha)
print(psych::alpha(pisa_data[,significant_vars$`Psychological Well-being`$FA[[2]]], check.keys = T)$total[1])
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
}
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
for(i in 1:nfactors[[group]]$FA){
alpha <- psych::alpha(pisa_data[,significant_vars[[group]]$FA[[i]]],
check.keys = T)$total[1]
cat("Factor ", i, "\n")
print(alpha$raw_alpha)
}
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
#Component internal consistency
cat("-> Component internal consistency:\n")
for(i in 1:nfactors[[group]]$PC){
alpha <- psych::alpha(pisa_data[,significant_vars[[group]]$PC[[i]]],
check.keys = T)$total[1]
cat("Component ", i, "\n")
print(alpha$raw_alpha)
}
}
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
for(i in 1:nfactors[[group]]$FA){
alpha <- psych::alpha(pisa_data[,significant_vars[[group]]$FA[[i]]],
check.keys = T)$total[1]
cat("\nFactor ", i, "\n")
print(alpha$raw_alpha)
}
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
#Component internal consistency
cat("-> Component internal consistency:\n")
for(i in 1:nfactors[[group]]$PC){
alpha <- psych::alpha(pisa_data[,significant_vars[[group]]$PC[[i]]],
check.keys = T)$total[1]
cat("\nComponent ", i, "\n")
print(alpha$raw_alpha)
}
}
#Psychological well-being
nfactors$`Psychological Well-being`$FA <- 1
nfactors$`Psychological Well-being`$PC <- 1
#Social well-being
nfactors$`Social Well-Being`$FA <- 1
nfactors$`Social Well-Being`$PC <- 1
# FA with principal factor method
fit_FA_MinRes <- list()
# rotated PCA
fit_PCA_rotated <- list()
#fitting the models
for(group in group_list){
#FA with MinRes
fit_FA_MinRes[[group]] <- fa(r = cor(pisa_data[,grouped_variables[[group]]]),
nfactors = nfactors[[group]]$FA,
rotate = "promax")
#advanced PCA
fit_PCA_rotated[[group]] <- principal(r = cor(pisa_data[,grouped_variables[[group]]]),
nfactors = nfactors[[group]]$PC,
rotate = "promax")
}
for(group in group_list){
#EFA
for(i in 1:nfactors[[group]]$FA){
barplot(fit_FA_MinRes[[group]]$loadings[,i],
main = paste(group,"- EFA: Factor",i),las=2,cex.names=0.7)
}
#rotated PCA
for(i in 1:nfactors[[group]]$PC){
barplot(fit_PCA_rotated[[group]]$loadings[,i],
main = paste(group,"- PCA: Rotated Component",i),las=2,cex.names=0.7)
}
}
threshold <- 0.4
significant_vars <- list()
for(group in group_list) {
#EFA
significant_vars[[group]]$FA <- list()
for(i in 1:nfactors[[group]]$FA) {
selected_indeces <- ifelse(abs(fit_FA_MinRes[[group]]$loadings[,i]) < threshold, FALSE, TRUE)
significant_vars[[group]]$FA[[i]] <- grouped_variables[[group]][selected_indeces]
}
#rotated PCA
significant_vars[[group]]$PC <- list()
for(i in 1:nfactors[[group]]$PC) {
selected_indeces <- ifelse(abs(fit_PCA_rotated[[group]]$loadings[,i]) < threshold, FALSE, TRUE)
significant_vars[[group]]$PC[[i]] <- grouped_variables[[group]][selected_indeces]
}
}
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
for(i in 1:nfactors[[group]]$FA){
alpha <- psych::alpha(pisa_data[,significant_vars[[group]]$FA[[i]]],
check.keys = T)$total[1]
cat("\nFactor ", i, "\n")
print(alpha$raw_alpha)
}
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
#Component internal consistency
cat("-> Component internal consistency:\n")
for(i in 1:nfactors[[group]]$PC){
alpha <- psych::alpha(pisa_data[,significant_vars[[group]]$PC[[i]]],
check.keys = T)$total[1]
cat("\nComponent ", i, "\n")
print(alpha$raw_alpha)
}
}
threshold <- 0.3
significant_vars <- list()
for(group in group_list) {
#EFA
significant_vars[[group]]$FA <- list()
for(i in 1:nfactors[[group]]$FA) {
selected_indeces <- ifelse(abs(fit_FA_MinRes[[group]]$loadings[,i]) < threshold, FALSE, TRUE)
significant_vars[[group]]$FA[[i]] <- grouped_variables[[group]][selected_indeces]
}
#rotated PCA
significant_vars[[group]]$PC <- list()
for(i in 1:nfactors[[group]]$PC) {
selected_indeces <- ifelse(abs(fit_PCA_rotated[[group]]$loadings[,i]) < threshold, FALSE, TRUE)
significant_vars[[group]]$PC[[i]] <- grouped_variables[[group]][selected_indeces]
}
}
for(group in group_list){
cat("\n-----------Group:", group, "-----------\n")
#alpha score
#cat("\nalpha:\n")
#alpha <- psych::alpha(pisa_data[,grouped_variables[[group]]], check.keys = T)
#cat(alpha$total[1]$raw_alpha)
#number of factors and components
cat("\n\nNumber of factors: ", nfactors[[group]]$FA)
cat("\nNumber of components: ", nfactors[[group]]$PC)
#MinRes factor analysis
cat("\n\n### MinRes Factor Analysis ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_FA_MinRes[[group]]$communality)
#fit score
cat("-> Fit of the model\n",
factor.fit(r = cor(select_if(pisa_data[,grouped_variables[[group]]],is.numeric)),
fit_FA_MinRes[[group]]), "\n")
#variance explained
cat("-> Variance explained:\n")
print(fit_FA_MinRes[[group]]$Vaccounted)
#factors internal consistency
cat("-> Factor internal consistency:\n")
for(i in 1:nfactors[[group]]$FA){
alpha <- psych::alpha(pisa_data[,significant_vars[[group]]$FA[[i]]],
check.keys = T)$total[1]
cat("\nFactor ", i, "\n")
print(alpha$raw_alpha)
}
#rotated PCA
cat("\n\n### Rotated PCA ###\n")
#communalities
cat("-> Communalities:\n")
print(fit_PCA_rotated[[group]]$communality)
#fit score
cat("-> Fit of the model: ", fit_PCA_rotated[[group]]$fit,"\n")
cat("-> Variance explained:\n")
print(fit_PCA_rotated[[group]]$Vaccounted)
#Component internal consistency
cat("-> Component internal consistency:\n")
for(i in 1:nfactors[[group]]$PC){
alpha <- psych::alpha(pisa_data[,significant_vars[[group]]$PC[[i]]],
check.keys = T)$total[1]
cat("\nComponent ", i, "\n")
print(alpha$raw_alpha)
}
}
