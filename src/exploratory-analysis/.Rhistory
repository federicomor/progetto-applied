#DIRECTORIES
root_proj_dir = "../../"
dataset_dir = paste(root_proj_dir,"data/pisa-woNA_school_final.csv",sep="")
dataset_dir = paste(root_proj_dir,"data/pisa-woNA_school_final_wo_Outl_ClassicData_PCA_SCORES.csv",sep="")
include_dir = paste(root_proj_dir,"src/include/Utilities.R",sep="")
#INCLUDING UTILITIES
source(include_dir)
#IMPORTING THE DATASET
pisa_data <- read.csv(file=dataset_dir)
#some adjustments on the data
pisa_data$X <- NULL
#pisa_data$schID <- as.factor(pisa_data$schID)
pisa_data$CNT <- as.factor(pisa_data$CNT)
library(GGally)
library(ggplot2)
library(dplyr)
ggcorr(select_if(pisa_data,is.numeric),label=TRUE,label_size = 2)
library(GGally)
library(ggplot2)
library(dplyr)
ggcorr(select_if(pisa_data,is.numeric),label=TRUE,label_size = 2)
#some adjustments on the data
pisa_data$X <- NULL
#pisa_data$schID <- as.factor(pisa_data$schID)
pisa_data$CNT <- as.factor(pisa_data$CNT)
#some adjustments on the data
pisa_data$X <- NULL
#pisa_data$schID <- as.factor(pisa_data$schID)
pisa_data$CNT <- as.factor(pisa_data$CNT)
library(GGally)
library(ggplot2)
library(dplyr)
ggcorr(select_if(pisa_data,is.numeric),label=TRUE,label_size = 2)
library(GGally)
library(ggplot2)
library(dplyr)
ggcorr(select_if(pisa_data,is.numeric),label=TRUE,label_size = 2)
library(GGally)
library(ggplot2)
library(dplyr)
ggcorr(select_if(pisa_data,is.numeric),label=TRUE,label_size = 2)
ggplot(pisa_data, aes(x = CNT)) +
geom_bar()
#Here we see that the variability in LMINS and MMINS is very high
boxplot(select_if(pisa_data,is.numeric),las=2,cex.axis=0.8)
#removing the variables with the highest variance
boxplot(select_if(subset(pisa_data,select=-c(LMINS,MMINS)),is.numeric),las=2,cex.axis=0.8)
countrys = unique(pisa_data$CNT)
shap <-c()
for(c in countrys){
for(i in 2:dim(pisa_data)[2]){
hist(pisa_data[which(pisa_data$CNT==c),i],main = paste(colnames(pisa_data)[i],c))
shap <- c(shap,shapiro.test(pisa_data[which(pisa_data$CNT==c),i])$p.value)
}
}
plot(seq(1,(dim(pisa_data)[2]-1)*length(countrys)),shap)
hist(shap)
for(i in 2:dim(pisa_data)[2]){
plot(pisa_data[,i],main = paste(colnames(pisa_data)[i]),col=pisa_data$CNT)
}
for(i in 2:dim(pisa_data)[2]){
plot(pisa_data[,i],main = paste(colnames(pisa_data)[i]),col=pisa_data$CNT,pch=16)
}
categories_variables = list(tec,psi,clt,fam,tch,sch)
cat_var_names = c("tec","psi","clt","fam","tch","sch")
categories_variables
dim(categories_variables)
length(categories_variables)
for (categ in categories_variables){
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT")categ]
for (categ in categories_variables){
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
for(i in 2:dim(data_categ)[2]){
plot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
}
}
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
for(i in 2:dim(data_categ)[2]){
plot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
}
}
for (categ in categories_variables){
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
for(i in 2:dim(data_categ)[2]){
plot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
}
}
for (categ in categories_variables[3:6]){
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
for(i in 2:dim(data_categ)[2]){
plot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
}
}
# output on console
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
for(i in 2:dim(data_categ)[2]){
plot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
}
}
# output on console
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
for(i in 2:dim(data_categ)[2]){
boxplot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
}
}
# output on console
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
for(i in 2:dim(data_categ)[2]){
# boxplot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
boxplot(data_categ[,i]~data_categ$CNT, main= paste(colnames(data_categ)[i]),las=2,
col=data_categ$CNT,pch=16)
}
}
typeof(data_categ$CNT)
# output on console
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
data_categ$CNT <-as.factor(data_categ$CNT)
for(i in 2:dim(data_categ)[2]){
# boxplot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
boxplot(data_categ[,i]~data_categ$CNT, main= paste(colnames(data_categ)[i]),las=2,
col=data_categ$CNT,pch=16)
}
}
graphics.off()
# output on console
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
data_categ$CNT <-as.factor(data_categ$CNT)
for(i in 2:dim(data_categ)[2]){
# boxplot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
boxplot(data_categ[,i]~data_categ$CNT, main= paste(colnames(data_categ)[i]),las=2,
col=data_categ$CNT)
}
}
# output on console
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
data_categ$CNT <-as.factor(data_categ$CNT)
for(i in 2:dim(data_categ)[2]){
# boxplot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
boxplot(data_categ[,i]~data_categ$CNT, main= paste(colnames(data_categ)[i]),las=2,
col=rainbow(16))
}
}
graphics.off()
# output on console
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
data_categ$CNT <-as.factor(data_categ$CNT)
for(i in 2:dim(data_categ)[2]){
# boxplot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
boxplot(data_categ[,i]~data_categ$CNT, main= paste(colnames(data_categ)[i]),las=2,
col=rainbow(16))
}
}
# output on console
for (categ in categories_variables){
x11()
par(mfrow = c(length(categ),1))
data_categ = pisa_data[,c("CNT",categ)]
data_categ$CNT <-as.factor(data_categ$CNT)
for(i in 2:dim(data_categ)[2]){
# boxplot(data_categ[,i],main = paste(colnames(data_categ)[i]),col=data_categ$CNT,pch=16)
boxplot(data_categ[,i]~data_categ$CNT, main= paste(colnames(data_categ)[i]),las=2,
col=rainbow(16))
}
}
pisa_data$CNT = as.factor(pisa_data$CNT)
plot(pisa_data[,sch], col=pisa_data$CNT,pch=16)
legend("bottomright",legend=unique(pisa_data$CNT),col=1:length(pisa_data$CNT),pch=16)
pisa_data$CNT = as.factor(pisa_data$CNT)
plot(pisa_data[,sch], col=pisa_data$CNT,pch=16)
legend("bottomright",legend=unique(pisa_data$CNT),col=1:length(pisa_data$CNT),pch=16)
plot(measures[,1],measures[,2],col=cluster.cutree+1)
plot3d(measures, size=3, col=cluster.cutree+1, aspect = F)
plot3d(measures, size=3, col=cluster.cutree+1,size=2 aspect = F)
plot3d(measures, size=2, col=cluster.cutree+1, aspect = F)
plot(measures[,1],measures[,2],col=cluster.cutree+1)
#directories
dataset_dir = "../../data/"
include_dir = "../include/Utilities.R"
#including utilities
#including utilities
source(include_dir)
#importing the dataset
pisa_data <- read.csv(file=paste(dataset_dir,"pisa-woNA_school_final_wo_Outl_ClassicData_PCA_SCORES.csv",sep=""))
data<-pisa_data
head(data)
dim(data)
colnames(data)
library(MVN)
library(car)
library(heplots)
library(mvnormtest)
#select only ICT moments fot the moment
categories_variables = list(tec,psi,clt,fam,tch,sch)
library(dplyr)
data <- data %>% dplyr::select(all_of(c("CNT",psi)))
# what column identify the group?
lab_index <- 1
p = dim(data)[2]
p
v = c()
# Re-name
colnames(data)[lab_index]="label"
head(data)
cols <- seq(1,p)
feats <- cols[!cols %in% lab_index]
data.feats = data[,feats]
data$label<-as.factor(data$label)
p     = length(feats) #don't count the column of labels
# Dimensions
n     = length(data$label) # total number of obs.
ng    = table(data$label)  # number of obs. in each group
treat_factors <- factor(data$label)
treat = levels(treat_factors) # levels of the treatment
g     = length(treat)      # number of levels (i.e., of groups)
indeces = list()
for (jj in 1:g){
indeces[jj] <- list(which(data$label == treat[jj]))
}
n_list = list()
for(j in 1:g) {
n_list[j] = list(length(indeces[[j]]))
}
n=0
for(j in 1:g) {
n = n +  n_list[[j]]
}
# Plot: different panels -> different group
#x11()
par(mfrow=c(2,g/4))
for (j in 1:(g/2)){
boxplot(data.feats[as.numeric(indeces[[j]]),], main=paste('group ',j),  ylim=c(round(min(data.feats)),
round(max(data.feats))), col = rainbow(g)[j])
}
#x11()
par(mfrow=c(4,g/8))
for (j in (g/2+1):g){
boxplot(data.feats[as.numeric(indeces[[j]]),], main=paste('group ',j),  ylim=c(round(min(data.feats)),
round(max(data.feats))), col = rainbow(g)[j])
}
fit = manova(as.matrix(data.feats) ~ data$label)
summary.manova(fit, test="Wilks")
# Pr(>F) = p-value of H0 vs. H1
# If it is very small -> H1 -> the treatment was effective
# Comment
# If p<=2 and g<=3 we have an exact test (with Wilks)
#select only ICT moments fot the moment
categories_variables = list(tec,psi,clt,fam,tch,sch)
library(dplyr)
data <- data %>% dplyr::select(all_of(c("CNT",psi)))
#directories
dataset_dir = "../../data/"
include_dir = "../include/Utilities.R"
#including utilities
#including utilities
source(include_dir)
#importing the dataset
pisa_data <- read.csv(file=paste(dataset_dir,"pisa-woNA_school_final_wo_Outl_ClassicData_PCA_SCORES.csv",sep=""))
data<-pisa_data
head(data)
dim(data)
colnames(data)
library(MVN)
library(car)
library(heplots)
library(mvnormtest)
#select only ICT moments fot the moment
categories_variables = list(tec,psi,clt,fam,tch,sch)
library(dplyr)
data <- data %>% dplyr::select(all_of(c("CNT",psi)))
# what column identify the group?
lab_index <- 1
p = dim(data)[2]
p
v = c()
# Re-name
colnames(data)[lab_index]="label"
head(data)
cols <- seq(1,p)
feats <- cols[!cols %in% lab_index]
data.feats = data[,feats]
data$label<-as.factor(data$label)
p     = length(feats) #don't count the column of labels
# Dimensions
n     = length(data$label) # total number of obs.
ng    = table(data$label)  # number of obs. in each group
treat_factors <- factor(data$label)
treat = levels(treat_factors) # levels of the treatment
g     = length(treat)      # number of levels (i.e., of groups)
indeces = list()
for (jj in 1:g){
indeces[jj] <- list(which(data$label == treat[jj]))
}
n_list = list()
for(j in 1:g) {
n_list[j] = list(length(indeces[[j]]))
}
n=0
for(j in 1:g) {
n = n +  n_list[[j]]
}
# Plot: different panels -> different group
#x11()
par(mfrow=c(2,g/4))
for (j in 1:(g/2)){
boxplot(data.feats[as.numeric(indeces[[j]]),], main=paste('group ',j),  ylim=c(round(min(data.feats)),
round(max(data.feats))), col = rainbow(g)[j])
}
#x11()
par(mfrow=c(4,g/8))
for (j in (g/2+1):g){
boxplot(data.feats[as.numeric(indeces[[j]]),], main=paste('group ',j),  ylim=c(round(min(data.feats)),
round(max(data.feats))), col = rainbow(g)[j])
}
fit = manova(as.matrix(data.feats) ~ data$label)
summary.manova(fit, test="Wilks")
# Pr(>F) = p-value of H0 vs. H1
# If it is very small -> H1 -> the treatment was effective
# Comment
# If p<=2 and g<=3 we have an exact test (with Wilks)
Ps_mvn <- NULL
for(j in 1:g) {
mvn.test <- mvn(data = data[indeces[[j]] , feats])
Ps_mvn <- c(Ps_mvn, mvn.test$multivariateNormality$`p value`)
}
Ps_mvn
# 2. same covariance structure (homoschedasticity)
S  = cov(data.feats)
Slist = list()
for (j in 1:g){
Slist[j] = list(cov(data.feats[indeces[[j]],]))
# Qualitatively:
round(Slist[[j]],digits=1)
}
summary(boxM(data.feats, treat_factors))
temp <- do.call(rbind, Slist)
for (j in 1:g){
image(Slist[[j]], col=heat.colors(100),main=paste('Cov. S',j), asp=1, axes = FALSE,
breaks = quantile(temp, (0:100)/100, na.rm=TRUE))
}
# First of all:
#   Let's see on which variables the group has an effect.
#   Via ANOVA: for each feature we perform an ANOVA to see if the belonging to
#   the group has an effect on the mean of the variables.
summary.aov(fit,test="Wilks")
# Comment
# Pr(>F) = p-value small -> the group has an influence on that X_k
# This analysis does NOT say either which groups differ nor which are the variables
# for which the groups differ.
alpha = 0.0001
k     = p*g*(g-1)/2
qT    = qt(1-alpha/(2*k), n-g)
W1 <- diag(t(fit$res) %*% fit$res) # fit$res^2
SSres <- sum(W1)
var = SSres/(n-g)
W     = summary.manova(fit)$SS$Residuals
SSres == sum(diag(W))
m  = sapply(data.feats,mean)      # estimates mu
m_list = list()
for (j in 1:g){
m_list[j] = list(sapply(data.feats[indeces[[j]],],mean)) # estimates mu.1=mu+tau.j
}
mg <- do.call(rbind, m_list)
mg
inf_list = list()
sup_list = list()
mean_list = list()
## be careful, order could be reversed
for(i in 1:(g-1)) {
for(j in (i+1):g) {
ind <- (i-1)*g-i*(i-1)/2+(j-i)
inf_list[ind] <- list(m_list[[i]]- m_list[[j]] - qT * sqrt( diag(W)/(n-g)
*(1/n_list[[i]]+1/n_list[[j]])))
mean_list[ind]<-list(m_list[[i]]- m_list[[j]])
sup_list[ind] <- list(m_list[[i]]- m_list[[j]] + qT * sqrt( diag(W)/(n-g)
*(1/n_list[[i]]+1/n_list[[j]])))
}
}
CI = list()
for(i in 1:ind){
CI[i] <- list(cbind(inf = inf_list[[i]],mean = mean_list[[i]], sup = sup_list[[i]]))
}
names_CI<-c()
for(i in 1:(g-1)) {
for(j in (i+1):g) {
names_CI<-c(names_CI,paste(treat[i],treat[j]))
}
}
names(CI)<-names_CI
alpha = 0.01
k     = p*g*(g-1)/2
qT    = qt(1-alpha/(2*k), n-g)
W1 <- diag(t(fit$res) %*% fit$res) # fit$res^2
SSres <- sum(W1)
var = SSres/(n-g)
W     = summary.manova(fit)$SS$Residuals
SSres == sum(diag(W))
m  = sapply(data.feats,mean)      # estimates mu
m_list = list()
for (j in 1:g){
m_list[j] = list(sapply(data.feats[indeces[[j]],],mean)) # estimates mu.1=mu+tau.j
}
mg <- do.call(rbind, m_list)
mg
inf_list = list()
sup_list = list()
mean_list = list()
## be careful, order could be reversed
for(i in 1:(g-1)) {
for(j in (i+1):g) {
ind <- (i-1)*g-i*(i-1)/2+(j-i)
inf_list[ind] <- list(m_list[[i]]- m_list[[j]] - qT * sqrt( diag(W)/(n-g)
*(1/n_list[[i]]+1/n_list[[j]])))
mean_list[ind]<-list(m_list[[i]]- m_list[[j]])
sup_list[ind] <- list(m_list[[i]]- m_list[[j]] + qT * sqrt( diag(W)/(n-g)
*(1/n_list[[i]]+1/n_list[[j]])))
}
}
CI = list()
for(i in 1:ind){
CI[i] <- list(cbind(inf = inf_list[[i]],mean = mean_list[[i]], sup = sup_list[[i]]))
}
names_CI<-c()
for(i in 1:(g-1)) {
for(j in (i+1):g) {
names_CI<-c(names_CI,paste(treat[i],treat[j]))
}
}
names(CI)<-names_CI
# Now we have a complete frame (intervals for all the components of tau_i)
# Comment
#   From these intervals we can see who is responsable for the change:
#   if the zero is NOT present in a comparison 'gi_gj' in an interval 'Xk'
#   then the variable 'Xk' is influenced by groups 'gi' and 'gj'.
# Plot: different panels -> different features
country_groups = list()
### cambia nome titolo
for(k in 1:p){
#x11()
#par(mfrow=c(2,1))
# Order boxes by mean (could also be done by median)
group_ordered <- with(data,
reorder(data$label,data.feats[,k],mean))
group_k = list()
counter = 1
boxplot(data.feats[,k]~group_ordered, main=paste(colnames(data.feats)[k]),las=2,
ylim=c(round(min(data.feats[,k])),
round(max(data.feats[,k]))), col = rainbow(g))
abline(h=0)
plot(c(1,g-1), xlim=c(c(1,g-1)), pch='',ylim=c(min(unlist(CI)),max(unlist(CI))),
xlab='pairs treat', ylab=paste('CI tau',colnames(data.feats)[k]),
main=paste('CItau',colnames(data.feats)[k]))
abline(h=0)
i=1
subgroup = levels(group_ordered)[i]
j=2
h=1
while(j!=g){
temp <- sort(c(levels(group_ordered)[i],levels(group_ordered)[j]))
ind<-paste(temp[1],temp[2])
if(CI[[ind]][k,1]*CI[[ind]][k,3]<0){ # zero in the interval
subgroup <- c(subgroup, levels(group_ordered)[j] )
j=j+1
}
else{
group_k[counter]<-list(subgroup)
counter = counter +1
print( names(CI[ind]))
lines (c(h,h), c(CI[[ind]][k,1],CI[[ind]][k,3]));
points(h, CI[[ind]][k,1], col=rainbow(g)[j], pch=16);
points(h, CI[[ind]][k,2], col="black", pch=16);
points(h, CI[[ind]][k,3], col=rainbow(g)[i], pch=16);
i=j
subgroup = levels(group_ordered)[i]
j=i+1
h=h+1
}
}
print("####")
group_k[counter]<-list(levels(group_ordered)[i:length(levels(group_ordered))])
country_groups[k] = list(group_k)
}
print(country_groups)
# Comment
#   If no one contains 0 it means that every group has relevance in every feature.
