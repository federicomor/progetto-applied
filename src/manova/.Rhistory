what_is[["COMPICT"]] = "Perceived ICT competence (WLE)"
what_is[["AUTICT"]] = "Perceived autonomy related to ICT use (WLE)"
what_is[["SOIAICT"]] = "ICT as a topic in social interaction (WLE)"
what_is[["ICTCLASS"]] = "Subject-related ICT use during lessons (WLE)"
what_is[["ICTOUTSIDE"]] = "Subject-related ICT use outside of lessons (WLE)"
what_is[["INFOCAR"]] = "Information about careers (WLE)"
what_is[["INFOJOB1"]] = "Information about the labour market provided by the school (WLE)"
what_is[["INFOJOB2"]] = "Information about the labour market provided outside of school (WLE)"
what_is[["FLCONFIN"]] = "Confidence about financial matters (WLE)"
what_is[["FLCONICT"]] = "Confidence about financial matters using digital devices (WLE)"
what_is[["FLSCHOOL"]] = "Financial education in school lessons (WLE)"
what_is[["FLFAMILY"]] = "Parental involvement in matters of Financial Literacy (WLE)"
what_is[["CURSUPP"]] = "Current parental support for learning at home (WLE)"
what_is[["EMOSUPP"]] = "Parents' emotional support (WLE)"
what_is[["PQSCHOOL"]] = "Parents' perceived school quality (WLE)"
what_is[["PASCHPOL"]] = "School policies for parental involvement (WLE)"
what_is[["PRESUPP"]] = "Previous parental support for learning at home (WLE)"
what_is[["JOYREADP"]] = "Parents enjoyment of reading (WLE)"
what_is[["ATTIMMP"]] = "Parents' attitudes towards immigrants (WLE)"
what_is[["INTCULTP"]] = "Parents' interest in learning about other cultures (WLE)"
what_is[["GCAWAREP"]] = "Parents' awareness of global issues (WLE)"
what_is[["BODYIMA"]] = "Body image (WLE)"
what_is[["SOCONPA"]] = "Social Connections: Parents (WLE)"
#usage
what_is[["PISADIFF"]]
what_is[["SCREADCOMP"]]
what_is[["ATTLNACT"]]
what_is[["COGFLEX"]]
#Anagraphics
#Technology
stu_ICT = c("ICTHOME", "ICTSCH", "ICTRES", "ENTUSE", "HOMESCH","USESCH","INTICT","COMPICT","AUTICT","SOIAICT","ICTCLASS","ICTOUTSIDE")
sch_ICT = c("RATCMP1", "RATCMP2")
#Learning time
stu_LT = c("MMINS","LMINS","SMINS","TMINS")
# "METASUM","METASPAM","UNDREM")
#Economic status
stu_WEALTH = c("ESCS","WEALTH","HOMEPOS")
#Relation with teachers
stu_TCH = c("TEACHINT","TEACHSUP")
# "DIRINS",
#Culture
stu_CULT = c("CULTPOSS","HEDRES",
"JOYREAD","SCREADCOMP","PISADIFF","ATTLNACT","COGFLEX")
#Well-being
stu_WB = c("EMOSUPS","COMPETE","GFOFAIL","EUDMO","SWBP","RESILIENCE","BELONG","BEINGBULLIED","PERCOMP","PERCOOP","BODYIMA", "STUBMI","PERFEED")
#Attitude to global issues
stu_GLOBAL = c("GCSELFEFF","GCAWARE","ATTIMM","INTCULT","RESPECT","AWACOM","GLOBMIND","DISCRIM")
#Concern for the future
stu_FUT = c("MASTGOAL","WORKMAST","INFOCAR","INFOJOB1","INFOJOB2")
#Family
stu_FAM = c("CURSUPP","EMOSUPP","PQSCHOOL","PASCHPOL","PRESUPP",
"JOYREADP","SOCONPA")
#complete vectors
# stu_vars = c(stu_ICT,stu_WB,stu_GLOBAL,stu_LT,stu_FUT,stu_FAM,stu_CULT,stu_WEALTH)
# sch_vars = c(sch_ICT)
# teach_vars = c()
#Psi case
# stu_vars = c(stu_LT,stu_WEALTH,stu_TCH,stu_CULT,stu_WB,stu_FAM) # more complete?
stu_vars = c(stu_LT,stu_WEALTH,stu_TCH,stu_WB)
sch_vars = c()
tch_vars = c()
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/local-src/pca/na-exploration - psi.Rmd"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data"
library(intsvy) # package to analyze PISA dataset
Europe = c("AUT","BEL","BGR","HRV","QCY","CZE","DNK","EST","FIN","FRA","DEU","GRC","HUN",
"IRL","ITA","LVA","LTU","LUX","NLD","POL","PRT","ROU","SVK","SVN","ESP","SWE","GBR")
#selecting and merging
pisa_europe <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = Europe)
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/local-src/pca/na-exploration - psi.Rmd"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data/"
library(intsvy) # package to analyze PISA dataset
Europe = c("AUT","BEL","BGR","HRV","QCY","CZE","DNK","EST","FIN","FRA","DEU","GRC","HUN",
"IRL","ITA","LVA","LTU","LUX","NLD","POL","PRT","ROU","SVK","SVN","ESP","SWE","GBR")
#selecting and merging
pisa_europe <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = Europe)
library(intsvy) # package to analyze PISA dataset
Europe = c("AUT","BEL","BGR","HRV","QCY","CZE","DNK","EST","FIN","FRA","DEU","GRC","HUN",
"IRL","ITA","LVA","LTU","LUX","NLD","POL","PRT","ROU","SVK","SVN","ESP","SWE","GBR")
#selecting and merging
pisa_europe <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = selected_countries)
library(intsvy) # package to analyze PISA dataset
selected_countries = c("HRV","CZE","DNK","EST","FIN","FRA","GRC","HUN","IRL","LTU","LUX","POL","SVK","SVN","ESP","SWE")
#selecting and merging
pisa_europe <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = selected_countries)
library(intsvy) # package to analyze PISA dataset
selected_countries = c("HRV","CZE","DNK","EST","FIN","FRA","GRC","HUN","IRL","LTU","LUX","POL","SVK","SVN","ESP","SWE")
#selecting and merging
pisa_europe <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = selected_countries)
library(intsvy) # package to analyze PISA dataset
selected_countries = c("HRV","CZE","DNK","EST","FIN","FRA","GRC","HUN","IRL","LTU","LUX","POL","SVK","SVN","ESP","SWE")
#selecting and merging
pisa_europe <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = selected_countries)
library(intsvy) # package to analyze PISA dataset
selected_countries = c("HRV","CZE","DNK","EST","FIN","FRA","GRC","HUN","IRL","LTU","LUX","POL","SVK","SVN","ESP","SWE")
#selecting and merging
pisa_europe <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = selected_countries)
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data/PISA-dataset"
library(intsvy) # package to analyze PISA dataset
selected_countries = c("HRV","CZE","DNK","EST","FIN","FRA","GRC","HUN","IRL","LTU","LUX","POL","SVK","SVN","ESP","SWE")
#selecting and merging
pisa_europe <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = selected_countries)
#pisa_world <- pisa.select.merge(folder= dataset_dir,school.file="CY07_MSU_SCH_QQQ.sav",  student.file="CY07_MSU_STU_QQQ.sav",student= stu_vars,school = sch_vars)
library(dplyr)
#pisa_world <- pisa_world %>% select(-starts_with("W_FSTU"))
pisa_europe <- pisa_europe %>% select(-starts_with("W_FSTU"))
#pisa_world <- pisa_world %>% select(-starts_with("PV"))
pisa_europe <- pisa_europe %>% select(-starts_with("PV"))
#pisa_world <- pisa_world %>% select(-starts_with("PV"))
pisa_europe <- pisa_europe %>% select(-starts_with("PV"))
#pisa_world <- pisa_world %>% select(-c("CNTRYID","CNTSCHID","CNTSTUID","BOOKID"))
pisa_europe <- pisa_europe %>% select(-c("CNTRYID","CNTSCHID","CNTSTUID","BOOKID"))
#select the variables of interest
# stu_vars = c(stu_LT,stu_WEALTH,stu_TCH,stu_WB)
inspect_europe <- pisa_europe[c("CNT",stu_LT,stu_WEALTH,stu_TCH,stu_WB)]
#inspect_world <- pisa_world[c("CNT",stu_ICT,sch_ICT,stu_CULT,stu_FAM,stu_WB,stu_WEALTH)]
# install.packages("naniar")
library(naniar)
# plot the NAs by columns: we see that there are patterns for NAs (i.e. same observations have NAs in different features)
vis_miss(inspect_europe,warn_large_data = FALSE)
#vis_miss(inspect_world,warn_large_data = FALSE)
library(ggplot2)
gg_miss_var(inspect_europe,show_pct = TRUE)
#gg_miss_var(inspect_world,show_pct = TRUE)
library(UpSetR)
# help(gg_miss_upset)
gg_miss_upset(inspect_europe,nsets = 10)
#gg_miss_upset(inspect_world,nsets = 10)
# this graph tells us which combination of variables has the most common NA
#gg_miss_fct(x = inspect_world,fct = CNT)
gg_miss_fct(x = inspect_europe,fct = CNT)
inspect_df_NA <- function(df){
plot1 <- vis_miss(df,warn_large_data = FALSE)
plot2 <- gg_miss_upset(df,nsets = 10)
plot3 <- gg_miss_fct(x = df,fct = CNT)
return(list(plot1,plot2,plot3))
}
# BY PERCENTAGES
# na_europe <- round(colSums(is.na(inspect_europe))/dim(inspect_europe)[1],digits = 1)
# na_world <- round(colSums(is.na(inspect_world))/dim(inspect_world)[1],digits = 1)
# threshold = 0.25
# europe_sel <- inspect_europe[na_europe < threshold]
# world_sel <- inspect_world[na_world < threshold]
# BY SPECIFIC VARIABLES
europe_sel <- inspect_europe %>% select(-c("BODYIMA","STUBMI","TMINS"))
#see the update
plots <- inspect_df_NA(europe_sel)
plots
unique(europe_sel$CNT)
europe_sel <- europe_sel %>% filter(!(CNT %in% c("ITA","BEL")))
#see the update
plots <- inspect_df_NA(europe_sel)
plots
left_from_to = function(df_before,df_after){
print(paste("We are left with",dim(df_after)[1]/dim(df_before)[1]*100,"% of obs"))
}
# 1) first option removing NAs with na.omit()
europe_woNA_all <- na.omit(europe_sel)
left_from_to(europe_sel,europe_woNA_all)
# 2) filling with mean or median
library(tidyr)
europe_woNA <- europe_sel %>% group_by(CNT) %>% mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
#check if we have removed NAs
left_from_to(europe_sel,europe_woNA)
vis_miss(europe_woNA,warn_large_data = FALSE)
# europe_woNA$CNT[which(is.na(europe_woNA$SWBP))]
#L'italia dava problemi! e purtroppo su una variabile molto importante
# europe_woNA_woITA=europe_woNA[europe_woNA$CNT!="ITA",]
europe_woNA_woITA=europe_woNA
#gi√† tolta in un chunk precedente
# unique(europe_woNA$CNT)
left_from_to(europe_woNA,europe_woNA_woITA)
vis_miss(europe_woNA_woITA,warn_large_data = FALSE)
df=europe_woNA_woITA
states = unique(df$CNT)
len = length(unique(df$CNT))
col.ramp = hcl.colors(len, palette = "viridis")
boxplot(df[,2:5],las=2)
boxplot(df[,6:20],las=2)
#provando a rimuovere gli outliers
library(data.table)
library(dataPreparation)
df_woOUTL = remove_sd_outlier(df, cols="auto", n_sigmas = 2.5, verbose = TRUE)
left_from_to(df,df_woOUTL)
boxplot(df_woOUTL[,2:4],las=2)
boxplot(df_woOUTL[,5:20],las=2)
boxplot(df_woOUTL$SWBP ~ df_woOUTL$CNT )
#pairs non funziona ci sono troppe obs
# pairs(europe_woNA_woITA[,6:10],col=col.ramp)
df_woOUTL_scaled = df_woOUTL
df_woOUTL_scaled = scale(df_woOUTL[,2:20])
df_woOUTL_scaled = data.frame(df_woOUTL_scaled)
df_woOUTL_scaled["CNT"] = df_woOUTL$CNT
#now cnt is the last one purtroppo
summary(df_woOUTL_scaled)
boxplot(df_woOUTL_scaled[,1:19],las=2)
df=df_woOUTL_scaled
pca_out = princomp(df_woOUTL_scaled[,1:19])
summary(pca_out)
pca_out$loadings
plot(cumsum(pca_out$sde^2)/sum(pca_out$sde^2), type='b', axes=F, xlab='Number of components', ylab='Contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.8, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:ncol(df_woOUTL_scaled),labels=1:ncol(df_woOUTL_scaled),las=2)
par(mfrow=c(2,1))
for(i in 1:2)barplot(pca_out$loadings[,i], ylim = c(-1, 1),
main=paste('Loadings PC ',i,sep=''),las=2)
## Interpretation
# La pc1 sembra fare la somma dei contributi positivi: cio√® quasi tutti tranne GFOFAIL e BEINGBULLIED
# quindi osservazioni con alta pc1 sembrano stare meglio
# La pc2 sembra fare un contrasto tra valori pi√π materiali (wealth, homeposs) e altri pi√π morali (teachsup,
# emosup, eudmo, reslience)
## Quick get meaning of a variable
what_is <- new.env(hash = TRUE, parent = emptyenv(), size = NA)
## insert into hash table
what_is[["MMINS"]] = "Learning time (minutes per week) - <Mathematics>"
what_is[["LMINS"]] = "Learning time (minutes per week) - <test language>"
what_is[["SMINS"]] = "Learning time (minutes per week) - <science>"
what_is[["TMINS"]] = "Learning time (minutes per week) - in total"
what_is[["FCFMLRTY"]] = "Familiarity with concepts of finance (Sum)"
what_is[["SCCHANGE"]] = "Number of school changes"
what_is[["CHANGE"]] = "Number of changes in educational biography (Sum)"
what_is[["STUBMI"]] = "Body mass index of student"
what_is[["ESCS"]] = "Index of economic social and cultural status"
what_is[["UNDREM"]] = "Meta-cognition: understanding and remembering"
what_is[["METASUM"]] = "Meta-cognition: summarising"
what_is[["METASPAM"]] = "Meta-cognition: assess credibility"
what_is[["ICTHOME"]] = "ICT available at home"
what_is[["ICTSCH"]] = "ICT available at school"
what_is[["HOMEPOS"]] = "Home possessions (WLE)"
what_is[["CULTPOSS"]] = "Cultural possessions at home (WLE)"
what_is[["HEDRES"]] = "Home educational resources (WLE)"
what_is[["WEALTH"]] = "Family wealth (WLE)"
what_is[["ICTRES"]] = "ICT resources (WLE)"
what_is[["DISCLIMA"]] = "Disciplinary climate in test language lessons (WLE)"
what_is[["TEACHSUP"]] = "Teacher support in test language lessons (WLE)"
what_is[["DIRINS"]] = "Teacher-directed instruction (WLE)"
what_is[["PERFEED"]] = "Perceived feedback (WLE)"
what_is[["EMOSUPS"]] = "Parents' emotional support perceived by student (WLE)"
what_is[["STIMREAD"]] = "Teacher's stimulation of reading engagement perceived by student (WLE)"
what_is[["ADAPTIVITY"]] = "Adaptation of instruction (WLE)"
what_is[["TEACHINT"]] = "Perceived teacher's interest (WLE)"
what_is[["JOYREAD"]] = "Joy/Like reading (WLE)"
what_is[["SCREADCOMP"]] = "Self-concept of reading: Perception of competence (WLE)"
what_is[["SCREADDIFF"]] = "Self-concept of reading: Perception of difficulty (WLE)"
what_is[["PISADIFF"]] = "Perception of difficulty of the PISA test (WLE)"
what_is[["PERCOMP"]] = "Perception of competitiveness at school (WLE)"
what_is[["PERCOOP"]] = "Perception of cooperation at school (WLE)"
what_is[["ATTLNACT"]] = "Attitude towards school: learning activities (WLE)"
what_is[["COMPETE"]] = "Competitiveness (WLE)"
what_is[["WORKMAST"]] = "Work mastery (WLE)"
what_is[["GFOFAIL"]] = "General fear of failure (WLE)"
what_is[["EUDMO"]] = "Eudaemonia: meaning in life (WLE)"
what_is[["SWBP"]] = "Subjective well-being: Positive affect (WLE)"
what_is[["RESILIENCE"]] = "Resilience (WLE)"
what_is[["MASTGOAL"]] = "Mastery goal orientation (WLE)"
what_is[["GCSELFEFF"]] = "Self-efficacy regarding global issues (WLE)"
what_is[["GCAWARE"]] = "Student's awareness of global issues (WLE)"
what_is[["ATTIMM"]] = "Student's attitudes towards immigrants (WLE)"
what_is[["INTCULT"]] = "Student's interest in learning about other cultures (WLE)"
what_is[["PERSPECT"]] = "Perspective-taking (WLE)"
what_is[["COGFLEX"]] = "Cognitive flexibility/adaptability (WLE)"
what_is[["RESPECT"]] = "Respect for people from other cultures (WLE)"
what_is[["AWACOM"]] = "Awareness of intercultural communication (WLE)"
what_is[["GLOBMIND"]] = "Global-mindedness (WLE)"
what_is[["DISCRIM"]] = "Discriminating school climate (WLE)"
what_is[["BELONG"]] = "Subjective well-being: Sense of belonging to school (WLE)"
what_is[["BEINGBULLIED"]] = "Student's experience of being bullied (WLE)"
what_is[["ENTUSE"]] = "ICT use outside of school (leisure) (WLE)"
what_is[["HOMESCH"]] = "Use of ICT outside of school (for school work activities) (WLE)"
what_is[["USESCH"]] = "Use of ICT at school in general (WLE)"
what_is[["INTICT"]] = "Interest in ICT (WLE)"
what_is[["COMPICT"]] = "Perceived ICT competence (WLE)"
what_is[["AUTICT"]] = "Perceived autonomy related to ICT use (WLE)"
what_is[["SOIAICT"]] = "ICT as a topic in social interaction (WLE)"
what_is[["ICTCLASS"]] = "Subject-related ICT use during lessons (WLE)"
what_is[["ICTOUTSIDE"]] = "Subject-related ICT use outside of lessons (WLE)"
what_is[["INFOCAR"]] = "Information about careers (WLE)"
what_is[["INFOJOB1"]] = "Information about the labour market provided by the school (WLE)"
what_is[["INFOJOB2"]] = "Information about the labour market provided outside of school (WLE)"
what_is[["FLCONFIN"]] = "Confidence about financial matters (WLE)"
what_is[["FLCONICT"]] = "Confidence about financial matters using digital devices (WLE)"
what_is[["FLSCHOOL"]] = "Financial education in school lessons (WLE)"
what_is[["FLFAMILY"]] = "Parental involvement in matters of Financial Literacy (WLE)"
what_is[["CURSUPP"]] = "Current parental support for learning at home (WLE)"
what_is[["EMOSUPP"]] = "Parents' emotional support (WLE)"
what_is[["PQSCHOOL"]] = "Parents' perceived school quality (WLE)"
what_is[["PASCHPOL"]] = "School policies for parental involvement (WLE)"
what_is[["PRESUPP"]] = "Previous parental support for learning at home (WLE)"
what_is[["JOYREADP"]] = "Parents enjoyment of reading (WLE)"
what_is[["ATTIMMP"]] = "Parents' attitudes towards immigrants (WLE)"
what_is[["INTCULTP"]] = "Parents' interest in learning about other cultures (WLE)"
what_is[["GCAWAREP"]] = "Parents' awareness of global issues (WLE)"
what_is[["BODYIMA"]] = "Body image (WLE)"
what_is[["SOCONPA"]] = "Social Connections: Parents (WLE)"
#usage
what_is[["PISADIFF"]]
what_is[["SCREADCOMP"]]
what_is[["ATTLNACT"]]
what_is[["COGFLEX"]]
#directories
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data/PISA-dataset"
#Including utilities
source(paste(working_dir,"/Utilities.R",sep=""))
#directories
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/local-src"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data/PISA-dataset"
#Including utilities
source(paste(working_dir,"/Utilities.R",sep=""))
what_is[["LMINS"]]
#directories
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data"
#including utilities
source(paste(working_dir,"/local-src/include/Utilities.R",sep=""))
#importing the dataset
pisa_data <- read.csv(file=paste(dataset_dir,"/pisa-woNA.csv",sep=""))
#select only ICT moments fot the moment
stu_ICT = c("ICTCLASS","ICTHOME","ICTOUTSIDE","ICTRES","AUTICT","COMPICT","INTICT","ENTUSE","HOMESCH","USESCH")
sch_ICT = c("RATCMP1", "RATCMP2")
library(dplyr)
pisa_df <- pisa_data %>% select(all_of(c(stu_ICT,sch_ICT)) )
library(MVN)
library(dplyr)
#multivariate Shapiro-Wilk test: not possible to perform
#sample size is too big -> maybe perform the test sampling data from the datset
#Henze-Zirkler‚Äôs test
result <-mvn(data = select_if(pisa_df,is.numeric), mvnTest = "hz") #too large
#Henze-Zirkler‚Äôs test
result <-mvn(data = select_if(pisa_df,is.numeric), mvnTest = "hz") #too large
#Henze-Zirkler‚Äôs test
result <-mvn(data = select_if(pisa_df,is.numeric), mvnTest = "hz") #too large
#Royston‚Äôs test (Shapiro-Wilk test under the hood)
#again not possible to perform: sample size too big
result <-mvn(data = select_if(pisa_data,is.numeric), mvnTest = "royston")
pisa_df["cnt"]
#directories
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data"
#including utilities
source(paste(working_dir,"/local-src/include/Utilities.R",sep=""))
#importing the dataset
pisa_data <- read.csv(file=paste(dataset_dir,"/pisa-woNA.csv",sep=""))
#select only ICT moments fot the moment
stu_ICT = c("ICTCLASS","ICTHOME","ICTOUTSIDE","ICTRES","AUTICT","COMPICT","INTICT","ENTUSE","HOMESCH","USESCH")
sch_ICT = c("RATCMP1", "RATCMP2")
library(dplyr)
pisa_df <- pisa_data %>% select(all_of(c(stu_ICT,sch_ICT)) )
pisa_df["CNT"]
pisa_df["CNT",]
View(pisa_data)
#select only ICT moments fot the moment
stu_ICT = c("ICTCLASS","ICTHOME","ICTOUTSIDE","ICTRES","AUTICT","COMPICT","INTICT","ENTUSE","HOMESCH","USESCH")
sch_ICT = c("RATCMP1", "RATCMP2")
library(dplyr)
pisa_df <- pisa_data %>% select(all_of(c("CNT",stu_ICT,sch_ICT)) )
pisa_df["CNT"]
unique(pisa_df["CNT"])
unique(pisa_df["CNT"])[1]
unique(pisa_df["CNT"])
type(unique(pisa_df["CNT"]))
#directories
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data/PISA-dataset"
#Including utilities
source(paste(working_dir,"/local-src/include/Utilities.R",sep=""))
#countries
selected_countries = c("HRV","CZE","DNK","EST","FIN","FRA","GRC","HUN","IRL","LTU","LUX","POL","SVK","SVN","ESP","SWE")
#Gender
stu_GENDER = c("ST004D01T")
#Technology
stu_ICT = c("ICTCLASS","ICTHOME","ICTOUTSIDE","ICTRES","AUTICT","COMPICT","INTICT","ENTUSE","HOMESCH","USESCH")
sch_ICT = c("RATCMP1", "RATCMP2")
#Family
stu_FAM = c("WEALTH","ESCS","HOMEPOS","BFMJ2","BMMJ1","HISCED","HISEI")
#Culture
stu_CULT = c("JOYREAD","CULTPOSS","HEDRES","SCREADCOMP","LMINS","MMINS")
#Well-being
stu_WB = c("ATTLNACT","EMOSUPS","COMPETE","EUDMO","GFOFAIL","SWBP","RESILIENCE","BELONG","BEINGBULLIED","PERFEED")
#Professori
stu_PROF = c("TEACHINT","TEACHSUP","STIMREAD")
#School
stu_SCH = c("PERCOMP","PERCOOP","ICTSCH")
#all together
stu_vars = c(stu_GENDER,stu_ICT,stu_FAM,stu_CULT,stu_WB,stu_PROF,stu_SCH)
sch_vars = c(sch_ICT)
teach_vars = c()
library(intsvy)
pisa_data <- pisa.select.merge(folder= dataset_dir,
school.file="CY07_MSU_SCH_QQQ.sav",
student.file="CY07_MSU_STU_QQQ.sav",
student= stu_vars,
school = sch_vars,
countries = selected_countries)
#remove unused variables
library(dplyr)
#pisa_world <- pisa_world %>% select(-starts_with("W_FSTU"))
pisa_data <- pisa_data %>% select(-starts_with("W_FSTU"))
#pisa_world <- pisa_world %>% select(-starts_with("PV"))
pisa_data <- pisa_data %>% select(-starts_with("PV"))
#pisa_world <- pisa_world %>% select(-starts_with("PV"))
pisa_data <- pisa_data %>% select(-starts_with("PV"))
#pisa_world <- pisa_world %>% select(-c("CNTRYID","CNTSCHID","CNTSTUID","BOOKID"))
pisa_data <- pisa_data %>% select(-c("CNTRYID","CNTSTUID","BOOKID"))
library(dplyr)
library(tidyr)
pisa_data_woNA <- pisa_data %>% group_by(CNT) %>% mutate_if(is.numeric, ~replace_na(.,median(., na.rm = TRUE)))
library(utils)
saving_dir = paste(working_dir,"/data/pisa-woNA.csv",sep="")
write.csv(pisa_data_woNA,file=saving_dir)
pisa_by_sch <- pisa_data_woNA %>% group_by(CNTSCHID)
View(pisa_by_sch)
levels(as.factor(pisa_data_woNA$CNTSCHID))
length(levels(as.factor(pisa_data_woNA$CNTSCHID)))
help("group_by")
help("summarise")
pisa_by_sch <- pisa_data_woNA %>% group_by(CNTSCHID) %>% summarise()
View(pisa_by_sch)
pisa_by_sch <- pisa_data_woNA %>% group_by(CNTSCHID) %>% summarise_at(vars(c(stu_vars,sch_vars)),list(name=mean))
pisa_by_sch <- pisa_data_woNA %>% group_by(CNTSCHID) %>% summarise_at(vars(all_of(c(stu_vars,sch_vars))),list(name=mean))
View(pisa_by_sch)
pisa_by_sch <- pisa_data_woNA %>% group_by(CNTSCHID) %>% summarise_at(vars(all_of(c("CNT",stu_vars,sch_vars))),list(name=mean))
pisa_by_sch["CNT"] <- pisa_data_woNA$CNT[pisa_by_sch$CNTSCHID==pisa_by_sch$CNTSCHID]
pisa_by_sch["CNT"] <- pisa_data_woNA$CNT[pisa_data_woNA$CNTSCHID==pisa_by_sch$CNTSCHID]
clear
#directories
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data"
include_dir = paste(working_dir,"/local-src/include/Utilities.R",sep="")
#including utilities
source(include_dir)
#importing the dataset
pisa_data <- read.csv(file=paste(dataset_dir,"/pisa-woNA.csv",sep=""))
#select only ICT moments fot the moment
library(dplyr)
pisa_data <- pisa_data %>% dplyr::select(all_of(c("CNT",stu_ICT,sch_ICT)))
#dropping spain
pisa_data <- pisa_data %>% filter(CNT!="ESP")
#dropping RATCMP2
pisa_data["RATCMP2"] <- NULL
#directories
working_dir = "/Users/marcogalliani/Desktop/PISA-dev-local"
dataset_dir = "/Users/marcogalliani/Desktop/PISA-dev-local/data"
include_dir = paste(working_dir,"/local-src/include/Utilities.R",sep="")
#including utilities
source(include_dir)
#importing the dataset
pisa_data <- read.csv(file=paste(dataset_dir,"/pisa-woNA.csv",sep=""))
#select only ICT moments fot the moment
library(dplyr)
pisa_data <- pisa_data %>% dplyr::select(all_of(c("CNT",stu_ICT,sch_ICT)))
#dropping RATCMP2
pisa_data["RATCMP2"] <- NULL
#dropping spain
pisa_data <- pisa_data %>% filter(CNT!="ESP")
help(adonis2)
library(vegan)
help(adonis2)
getOption("mc.cores")
help("getOption")
library(vegan)
#try with smaller datasets
small_pisa <- pisa_data %>% filter(CNT %in% c("FRA","GRC","IRL","SWE"))
result <- adonis2(formula = small_pisa[,c(stu_ICT,"RATCMP1")]~CNT, data = small_pisa)
library(vegan)
#try with smaller datasets
small_pisa <- pisa_data %>% filter(CNT %in% c("FRA","GRC","IRL","SWE"))
result <- adonis2(formula = small_pisa[,c(stu_ICT,"RATCMP1")]~CNT, data = small_pisa, method = "malhanobis")
result <- adonis2(formula = small_pisa[,c(stu_ICT,"RATCMP1")]~CNT, data = small_pisa, method = "mahalanobis")
